apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: kaniko-test-task
  namespace: mytest2
spec:
  description: 'This Task builds a simple Dockerfile with kaniko and pushes to a registry. This Task stores the image name and digest as results, allowing Tekton Chains to pick up that an image was built & sign it.'
  params:
    - description: Name (reference) of the image to build.
      name: IMAGE
      type: string
    - default: ./Dockerfile
      description: Path to the Dockerfile to build.
      name: DOCKERFILE
      type: string
    - default: ./
      description: The build context used by Kaniko.
      name: CONTEXT
      type: string
    - default: []
      name: EXTRA_ARGS
      type: array
    - default: 'gcr.io/kaniko-project/executor:debug@sha256:2562c4fe551399514277ffff7dcca9a3b1628c4ea38cb017d7286dc6ea52f4cd'
      description: The image on which builds will run (default is v1.5.1)
      name: BUILDER_IMAGE
      type: string
  results:
    - description: Digest of the image just built.
      name: IMAGE_DIGEST
      type: string
    - description: URL of the image just built.
      name: IMAGE_URL
      type: string
  steps:
    - args:
        - $(params.EXTRA_ARGS)
        - '--dockerfile=$(params.DOCKERFILE)'
        - '--context=$(workspaces.source.path)/$(params.CONTEXT)'
        - '--destination=$(params.IMAGE)'
        - '--digest-file=$(results.IMAGE_DIGEST.path)'
        - '--insecure'
        - '--verbosity=debug'
      computeResources: {}
      image: $(params.BUILDER_IMAGE)
      name: build-and-push
      securityContext:
        runAsUser: 0
      workingDir: $(workspaces.source.path)
    - computeResources: {}
      image: registry.access.redhat.com/ubi8
      name: write-url
      script: |
        set -e
        image="$(params.IMAGE)"
        echo -n "${image}" | tee "$(results.IMAGE_URL.path)"
  workspaces:
    - description: Holds the context and Dockerfile
      name: source
    - description: Includes a docker `config.json`
      mountPath: /kaniko/.docker
      name: dockerconfig
      optional: true